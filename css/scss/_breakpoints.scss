// Map of breakpoints
$breakpoints: (
	'at330'   : ( max-width:   330px ),
	'at400'   : ( max-width:   400px ),
	'at500'   : ( max-width:   500px ),
	'at600'   : ( max-width:   600px ),
	'at700'   : ( max-width:   700px ),
	'at1000'  : ( max-width:  1000px ),
	'at1200'  : ( max-width:  1200px ),
	'at1400'  : ( max-width:  1400px ),
	'xlarge'  : ( max-width: 10000px ),
	'min700'  : ( min-width:   700px ),
	'min1000' : ( min-width:  1000px )
);

// Example use case:
// @include respond-to('xlarge') {
//     display: block;
//     padding: 8%;
// }
// @include respond-to('at1000') {
//     display: flex;
//     justify-content: space-between;
//     padding: 5%;
// }
// (Work in order of largest to smallest)

@mixin respond-to($name) {
	// If the key exists in the map
	@if map-has-key($breakpoints, $name) {
		// Prints a media query based on the value
		@media #{inspect(map-get($breakpoints, $name))} {
			@content;
		}
	} @else { // If the key doesn't exist in the map
		@warn 'No value could be retrieved from `#{$breakpoint}`. '
		+ 'Please make sure it is defined in `$breakpoints` map.';
	}
}
