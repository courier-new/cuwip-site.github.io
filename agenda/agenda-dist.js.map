{"version":3,"sources":["agenda.js"],"names":["progData","schedule","Array","eventTypes","$","getJSON","data","addAgenda","agendaContent","length","setTimeout","each","i","day","isLast","addDay","html","addLegend","daySection","college","events","eventObj","addEvent","event","hasExpandable","debugHide","shortDesc","options","eventCard","sname","addBasicInfo","addExpandedInfo","types","includes","basicInfo","eType","push","name","required","timeStart","timeEnd","place","isTalk","isBreakout","shouldBeHidden","expandedInfo","addTalkDesc","addBreakoutOptions","component","speaker","speakerImg","speakerHome","speakerPage","URL","type","match","snum","parseInt","substr","t","id","breakouts","s","sessions","hasOwnProperty","special","toLowerCase","careerBreakouts","legend","sort","pn","charAt","toUpperCase","slice","on","e","window","width","target","hasClass","removeClass","addClass","click","parents","$eventItem","closest","find","slideUp","slideDown"],"mappings":"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","file":"agenda-dist.js","sourcesContent":["/**\r\n * agenda.js\r\n *\r\n * Parses program data from agenda.json and automatically populated agenda page in readable format.\r\n *\r\n * @author    Kelli Rockwell <kellirockwell@mail.com>\r\n * @since     File available since August 10th, 2017\r\n * @version   1.0.0\r\n */\r\n\r\n// Variable for storing all of the program data retrieved from json\r\nlet progData = {schedule: Array(0)};\r\n\r\n// Array for storing all the different event types for creating bubble legend\r\nlet eventTypes = [];\r\n\r\n// Read in agenda data from json\r\n$.getJSON('agenda.min.json', (data) => {\r\n   progData = data;\r\n   addAgenda();\r\n});\r\n\r\n// Function for populating the whole agenda via data read in from json\r\nconst addAgenda = () => {\r\n\tlet agendaContent = \"\";\r\n    // Wait until agenda data has been loaded\r\n\tif (!progData.schedule.length) {\r\n\t\tsetTimeout(() => {\r\n\t\t\taddAgenda();\r\n\t\t}, 200);\r\n\t} else {\r\n\t\t// For each day of the schedule\r\n\t\t$(progData.schedule).each((i, day) => {\r\n            // Check if day is last day\r\n\t\t\tlet isLast = i === progData.schedule.length - 1;\r\n            // Add day to the agenda\r\n            agendaContent += addDay({\r\n                'day': day,\r\n                'isLast': isLast\r\n            });\r\n\t\t});\r\n\t\t// Fill agenda\r\n\t\t$('.agenda.spread').html(agendaContent);\r\n        // Add events legend\r\n\t    addLegend();\r\n\t}\r\n};\r\n\r\n// Adds a day to the agenda\r\nconst addDay = ({\r\n    'day': day,\r\n    'isLast': isLast\r\n}) => {\r\n    // Define day of week and institution of the day\r\n    let daySection = `<h1>${day.day}</h1>\r\n        <span class='campus reference'>${day.college}</span>\r\n            <div class='day table'>\\n`;\r\n    // For each event in the day\r\n    $(day.events).each((i, eventObj) => {\r\n        // Add event to the agenda\r\n        daySection += addEvent(eventObj);\r\n    });\r\n    daySection += \"<!--end day table--></div>\\n\";\r\n    // Add separator except on last day\r\n    daySection += (!isLast) ? \"<div class='separator'></div>\" : \"\";\r\n    return daySection;\r\n};\r\n\r\n// Adds an event card to a day\r\nconst addEvent = (event) => {\r\n    // Determine if event has extra description for expandable info section\r\n    const hasExpandable = !event.debugHide && (event.shortDesc.length || event.options);\r\n    // Add event card\r\n    let eventCard = `<div class='event ${event.sname}`;\r\n    eventCard += hasExpandable ? ` expandable'>` : `'>`;\r\n    // Add item name, time, place, and type designations\r\n    eventCard += addBasicInfo(event);\r\n    // Add expandable section with additional details for event\r\n    eventCard += addExpandedInfo({\r\n        'event': event,\r\n        'isTalk': event.types.includes(\"talk\"),\r\n        'isBreakout': event.types.includes(\"breakout\"),\r\n        'shouldBeHidden': event.debugHide || false,\r\n        'hasExpandable': hasExpandable\r\n    });\r\n    // Condtionally add expandable arrow indicator\r\n    eventCard += hasExpandable ? `<div class='expandable arrow'><i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i></div>\\n` : ``;\r\n    eventCard += `<!--end event card--></div>\\n`;\r\n    return eventCard;\r\n};\r\n\r\n// Adds name, time, place, and type designations for an event\r\nconst addBasicInfo = (event) => {\r\n    // Add container for event types\r\n    let basicInfo = `<div class='type bubbles'>\\n`;\r\n    $(event.types).each((i, eType) => {\r\n        // If event type is not yet part of legend array\r\n        if (!eventTypes.includes(eType)) {\r\n            // Add it\r\n            eventTypes.push(eType);\r\n        }\r\n        // Mark what type of event this is with span bubble element\r\n        basicInfo += `<span class='${eType}'></span>\\n`;\r\n    });\r\n    basicInfo += `<!--end type bubbles--></div>\\n<div class='info'>`;\r\n    // Add event name\r\n    basicInfo += `<span class='name ${event.sname}'>${event.name}`;\r\n    // Mark if event is Optional\r\n    basicInfo += (!event.required) ? ` <span class='optional'>(Optional)</span>` : ``;\r\n    basicInfo += `<!--end name span--></span>\\n`;\r\n    // Add event time\r\n    basicInfo += `<span class='time ${event.sname}'>${event.timeStart} - ${event.timeEnd}</span>`;\r\n    // Add event location\r\n    basicInfo += `<span class='place ${event.sname}'>${event.place}</span>`;\r\n    basicInfo += `<!--end info--></div>\\n`;\r\n    return basicInfo;\r\n};\r\n\r\n// Adds expandable section with additional details for an event\r\nconst addExpandedInfo = ({\r\n    'event': event,\r\n    'isTalk': isTalk,\r\n    'isBreakout': isBreakout,\r\n    'shouldBeHidden': shouldBeHidden,\r\n    'hasExpandable': hasExpandable\r\n}) => {\r\n    // If card has no expandable\r\n    if (!hasExpandable) {\r\n        return \"\";\r\n    } else {\r\n        // Add desc/options element, if event is talk or breakout session\r\n        let expandedInfo = \"\";\r\n        if (isTalk && !shouldBeHidden) {\r\n            expandedInfo += addTalkDesc(event);\r\n        } else if (isBreakout && !shouldBeHidden) {\r\n            expandedInfo += addBreakoutOptions(event);\r\n        } else if (!shouldBeHidden) {\r\n            expandedInfo += `<div class='about ${event.types[0]}'>\\n<div class='inside grid'>\\n<div class='desc'>\\n`;\r\n            expandedInfo += (event.shortDesc.length) ? `<p>${event.shortDesc}</p>\\n` : `<p>No details currently available for this event.</p>`;\r\n            expandedInfo += `<!--end desc--></div>\\n<!--end inside grid--></div>\\n<!-- end about--></div>`;\r\n        }\r\n        return expandedInfo;\r\n    }\r\n};\r\n\r\nconst addTalkDesc = (event) => {\r\n\tlet component = \"\";\r\n\tif (!event.speaker || event.speaker === \"TBD\" || event.debugHide) {\r\n\t\treturn component;\r\n\t} else {\r\n        // Add extra info container\r\n\t\tcomponent += `<div class='about ${event.types[0]}'>\\n<div class='inside grid'>\\n`;\r\n        // Add speaker image\r\n        component += `<div class='img'><img src='../img/${event.speakerImg}'></div>\\n`;\r\n        // Add speaker name\r\n        component += `<div class='img-header'><h2>${event.speaker}</h2></div>\\n`;\r\n        // Add speaker home\r\n\t\tcomponent += `<div class='img-caption'>${event.speakerHome}</div>\\n`;\r\n        // Add event description and link to speaker page\r\n\t\tcomponent += `<div class='desc'>\\n<p>${event.shortDesc}</p>\\n<p>Visit her <a target='_blank' href='${event.speakerPage.URL}'>${event.speakerPage.type}</a> to learn more.</p>\\n</div>\\n`;\r\n        component += `<!--end inside grid--></div>\\n<!--end about--></div>\\n`;\r\n\t\treturn component;\r\n\t}\r\n};\r\n\r\nconst addBreakoutOptions = (event) => {\r\n\tlet component = \"\";\r\n\tif (!event.options || event.options.length === 0 || event.debugHide) {\r\n\t\treturn component;\r\n   } else if (event.name.match(/breakout session \\d of \\d/i)) {\r\n      // Remember current breakout session number by extracting from session name (i.e. \"Breakout Session 1 of 3\" => 1)\r\n      let snum = parseInt(event.name.match(/\\d of \\d/)[0].substr(0, 1));\r\n\t\t// Label container with event types\r\n      component += \"<div class='about \";\r\n      for (let t = 0; t < event.types.length; t++) {\r\n         component += event.types[t];\r\n         component += (t + 1 === event.types.length) ? \"\" : \" \";\r\n      }\r\n      component += \"'>\\n<div class='inside grid'>\\n<ul>\\n\";\r\n      for (let id in progData.breakouts) {\r\n         // Store current breakout session data\r\n         let s = progData.breakouts[id];\r\n         // If breakout session is included in current session number\r\n         if (s.sessions.includes(snum)) {\r\n            // Add breakout session occurrences\r\n            component += \"<li>\\n<div class='occurrences'>\";\r\n            for (let i = 1; i < 4; i++) {\r\n               component += (s.sessions.includes(i)) ? `<span class='indicator true'>${i}</span>` : `<span class='indicator false'>${i}</span>`;\r\n            }\r\n            // Add breakout session info\r\n            component += \"</div>\\n<div class='details'><span class='session'>\" + s.name + \"</span>\";\r\n            // If breakout session has special property\r\n      \t\tif (s.hasOwnProperty(\"special\")) {\r\n      \t\t\tcomponent += \"<span class='label\";\r\n      \t\t\t// If breakout session is labeled as only occurring once\r\n      \t\t\tcomponent += (s.special.toLowerCase().includes(\"once\")) ? \" once'>\" : \"'>\";\r\n      \t\t\tcomponent += s.special + \"</span>\";\r\n            }\r\n         }\r\n   \t\tcomponent += \"</li>\\n\";\r\n      }\r\n\t\tcomponent += \"</ul>\\n</div>\\n</div>\\n\";\r\n\t\treturn component;\r\n\t} else if (event.name.match(/career/i)) {\r\n      // Label container with event types\r\n      component += \"<div class='about \";\r\n      for (let t = 0; t < event.types.length; t++) {\r\n         component += event.types[t];\r\n         component += (t + 1 === event.types.length) ? \"\" : \" \";\r\n      }\r\n      component += \"'>\\n<div class='inside grid'>\\n<ul>\\n\";\r\n      for (let id in progData.careerBreakouts) {\r\n         // Store current breakout session data\r\n         let s = progData.careerBreakouts[id];\r\n         // Add breakout session info\r\n         component += `<li>\\n<div class='details'><span class='session'>${s.name}</span>`;\r\n   \t\tcomponent += \"</li>\\n\";\r\n      }\r\n\t\tcomponent += \"</ul>\\n</div>\\n</div>\\n\";\r\n\t\treturn component;\r\n   }\r\n};\r\n\r\n// Build and insert legend of event types using populated eventTypes array\r\nconst addLegend = () => {\r\n    let legend = \"\";\r\n    // Sort event types alphabetically\r\n\teventTypes.sort();\r\n\t// For each type of event\r\n\t$(eventTypes).each((i, eType) => {\r\n\t\t// Produce proper (readable) name for event type\r\n\t\tlet pn = eType;\r\n        // For certain events, proper name is specially formatted\r\n\t\tif (eType == \"breakout\") {\r\n\t\t\tpn = \"Breakout Session\";\r\n\t\t} else if (eType == \"free\") {\r\n\t\t\tpn = \"Free Time\";\r\n\t\t} else if (eType == \"misc\") {\r\n\t\t\tpn = \"Misc/Special\";\r\n\t\t} else if (eType == \"shuttle\") {\r\n\t\t\tpn = \"Shuttle Run\";\r\n\t\t} else {\r\n            // For all other events, just capitalize the first letter of non-proper name\r\n\t\t\tpn = pn.charAt(0).toUpperCase() + pn.slice(1);\r\n\t\t}\r\n\t\tlegend += `<div><span class='${eType}'></span>${pn}</div>\\n`;\r\n\t});\r\n    // Fill legend\r\n\t$('.event.types.legend').html(legend);\r\n};\r\n\r\n// Clicking on agenda event type bubble\r\n$('.agenda.spread').on('click', '.type.bubbles span', (e) => {\r\n\tif ($(window).width() <= 700) {\r\n\t\tif ($(e.target).hasClass('focused')) {\r\n\t\t\t$(e.target).removeClass('focused');\r\n\t\t} else {\r\n\t\t\t$(e.target).addClass('focused');\r\n\t\t}\r\n\t}\r\n});\r\n\r\n// On click anywhere outside event type bubble on mobile, close bubble\r\n$('html').click((e) => {\r\n   if (!$(e.target).parents('.type.bubbles').length && $(window).width() <= 700) {\r\n\t\t$('.type.bubbles span').removeClass('focused');\r\n   }\r\n});\r\n\r\n// Clicking agenda event will open event's details\r\n$('.agenda.spread').on('click', '.event', (e) => {\r\n    let $eventItem = $(e.target).closest('.event');\r\n   if ($eventItem.hasClass('expanded')) {\r\n       $eventItem.removeClass('expanded');\r\n       $eventItem.find('.about').slideUp();\r\n   } else if ($eventItem.hasClass('expandable')) {\r\n       $eventItem.addClass('expanded');\r\n       $eventItem.find('.about').slideDown();\r\n   }\r\n});\r\n\r\n/* End of agenda.js */\r\n"]}